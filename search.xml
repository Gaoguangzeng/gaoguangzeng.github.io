<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vim学习记录</title>
      <link href="/2019/12/29/%E5%B7%A5%E5%85%B7/vim%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/12/29/%E5%B7%A5%E5%85%B7/vim%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<hr><p>title: vim学习记录<br>categories: 工具<br>date: 2019-12-29 14:31:22<br>tags: vim</p><hr><h1 id="vim介绍"><a href="#vim介绍" class="headerlink" title="vim介绍"></a>vim介绍</h1><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><ul><li>vi文本编辑器有三种模式:命令、编辑和ex模式。</li></ul><ol><li><p>启动时，vi以命令模式启动。如果您不确定自己处于哪种模式，请按Esc返回命令模式。<br>在命令模式下，你可以使用方向键移动，或者使用vi移动键</p><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>h</td><td>向左</td></tr><tr><td>j</td><td>向下</td></tr><tr><td>k</td><td>向上</td></tr><tr><td>l</td><td>向右</td></tr></tbody></table></li><li><p>编辑模式<br>编辑模式允许您插入或附加文本。</p></li><li><ol><li>要在光标当前位置之前插入文本，在命令模式下，请按i。类似地，</li></ol></li><li><ol start="2"><li>要在光标之后追加，请键入a。<br>(请记住，在此模式下，光标键不能移动。)<br>输入完文本后，按Esc回到命令模式。然后可以退出vi编辑模式</li></ol></li><li><p><code>ex</code>模式<br>vi怎么保存与退出？这需要进入ex模式<br>ex模式是命令模式的扩展。进入它，按Esc，然后:(冒号)。光标将在冒号提示符下移动到屏幕底部。<br>输入<code>:w</code>写文件，<br>输入<code>:q</code>退出。您可以通过输入<code>:wq</code>将它们组合起来保存并退出。然而，如果您已经完成了您的文件，从命令模式输入Shift-z-z通常会更方便。</p></li></ol><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><ul><li>Shift-z-z  保存文件并退出vi编辑器</li><li>Shift-u    撤消对当前行的所有更改</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中使用list和tuple</title>
      <link href="/2019/12/28/languages/python%E4%B8%AD%E4%BD%BF%E7%94%A8list%E5%92%8Ctuple/"/>
      <url>/2019/12/28/languages/python%E4%B8%AD%E4%BD%BF%E7%94%A8list%E5%92%8Ctuple/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h1 id="list"><a href="#list" class="headerlink" title="list"></a>list</h1><blockquote><p>似乎每次开启pycharm要执行(当然我除非设置桌面图标)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gaozeng@gaozeng:~&#x2F;pycharm2019&#x2F;bin$ sh pycharm.sh </span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> languages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python中的变量与简单数据类型</title>
      <link href="/2019/12/28/languages/python%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E4%B8%8E%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/12/28/languages/python%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E4%B8%8E%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><ol><li>在 Python 3 中，可以用中文作为变量名，非 ASCII 标识符也是允许的了。</li><li>Python中单行注释以 # 开头</li><li>多行注释可以用多个 # 号，还有 &#39;&#39;&#39; 和 &quot;&quot;&quot;</li></ol><ul><li>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数</li><li>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠()来实现多行语句</li><li><blockquote><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p><ul><li>int (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 的Long。</li><li>bool (布尔), 如 True。</li><li>float (浮点数), 如 1.23、3E-2</li><li>complex (复数), 如 1 + 2j、 1.1 + 2.2j</li></ul></blockquote></li></ul><blockquote><p>fn+esc可调整首行键盘层次</p></blockquote><ul><li>在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，</li><li>变量本身类型不固定的语言称之为==动态语言==，与之对应的是==静态语言==.</li><li>/ 除法计算结果是浮点数，即使是两个整数恰好整除，整数的<strong>地板除</strong>//永远是整数<h1 id="字符编码问题"><a href="#字符编码问题" class="headerlink" title="字符编码问题"></a>字符编码问题</h1></li><li>len()函数计算的是str的字符数:len(‘中文’)=&gt;2，如果换成bytes，len()函数就计算字节数：len(b’ABC’)=&gt;3;len(‘中文’.encode(‘utf-8’))=&gt;6:(1个中文字符经过UTF-8编码后通常会占用3个字节，而1个英文字符只占用1个字节)</li><li>在操作字符串时，我们经常遇到str和bytes的互相转换。为了避免乱码问题，应当始终坚持使用UTF-8编码对str和bytes进行转换。</li><li>由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：<blockquote><p>#!/usr/bin/env python3<br>#-<em>- coding: utf-8 -</em>-</p></blockquote></li></ul><p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；<br>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。<br>申明了UTF-8编码并不意味着你的.py文件就是UTF-8编码的，必须并且要确保文本编辑器正在使用UTF-8 without BOM编码.<br>如果.py文件本身使用UTF-8编码，并且也申明了# -<em>- coding: utf-8 -</em>-，打开命令提示符测试就可以正常显示中文</p><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><ul><li>最后一个常见的问题是如何输出格式化的字符串。我们经常会输出类似’亲爱的xxx你好！你xx月的话费是xx，余额是xx’之类的字符串，而<strong>xxx的内容都是根据变量变化的</strong>，所以，需要一种简便的格式化字符串的方式。</li><li>Python中，采用的格式化方式和C语言是一致的，用%实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(&#39;%2d-%02d&#39; % (3, 1))</span><br><span class="line">print(&#39;%.2f&#39; % 3.1415926)</span><br></pre></td></tr></table></figure><strong>你不太确定应该用什么，%s永远起作用，它会把任何数据类型转换为字符串</strong></li></ul><table><thead><tr><th>占位符</th><th>替换内容</th></tr></thead><tbody><tr><td>%d</td><td>整数</td></tr><tr><td>%f</td><td>浮点数</td></tr><tr><td>%s</td><td>字符串</td></tr><tr><td>%x</td><td>十六进制整数</td></tr><tr><td>* format()形式</td><td></td></tr><tr><td><strong>写到这里我放弃geany,在ubuntu上安装了pycharm</strong></td><td></td></tr></tbody></table><h1 id="修改python的软连接"><a href="#修改python的软连接" class="headerlink" title="修改python的软连接"></a>修改python的软连接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">which python</span><br><span class="line">sudo ln -s&#x2F;-f[已存在覆盖用f] &#x2F;usr&#x2F;bin&#x2F;python3.6[源]　&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python[which给的结果地址]</span><br></pre></td></tr></table></figure><h1 id="安装pycharm"><a href="#安装pycharm" class="headerlink" title="安装pycharm"></a>安装pycharm</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install [pycharm-professional|pycharm-community] --classic</span><br></pre></td></tr></table></figure><p>第一次报错：因为我终止了第一次执行，因下载的太慢了。然后再次执行代码，失败<br>解决办法：snap changes,sudo abort [某一ID]<br>第二次报错：ctl+c终止，这次不需要上面的解决办法。第一次ctl+z会有错误。<br><a href="https://blog.csdn.net/xuelucky/article/details/81234293" target="_blank" rel="noopener">参考最终链接</a><br>出现依赖库和解释器的问题；最后使用的是系统的interpret;python3.6;</p><h1 id="安装微信"><a href="#安装微信" class="headerlink" title="安装微信"></a>安装微信</h1><p><a href="https://blog.csdn.net/wangshiming88/article/details/85333352" target="_blank" rel="noopener">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> languages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改repo下的子文件夹</title>
      <link href="/2019/12/27/%E5%B7%A5%E5%85%B7/Record_learnGithub/"/>
      <url>/2019/12/27/%E5%B7%A5%E5%85%B7/Record_learnGithub/</url>
      
        <content type="html"><![CDATA[<h1 id="修改repo下的子文件夹"><a href="#修改repo下的子文件夹" class="headerlink" title="修改repo下的子文件夹"></a>修改repo下的子文件夹</h1><ul><li>删除;在需要的文件夹下开启终端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone　repo-url</span><br><span class="line">git rm -r --cached file&#x2F;folder   &#x2F;&#x2F;--cached不会把本地的&lt;file&gt;删除</span><br><span class="line">git commit -m &#39;delete file dir&#39;</span><br><span class="line">git push -u origin master        &#x2F;&#x2F;按提示输入账号和密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo书写第一步</title>
      <link href="/2019/12/27/%E5%B7%A5%E5%85%B7/hexo%E4%B9%A6%E5%86%99%E7%AC%AC%E4%B8%80%E6%AD%A5/"/>
      <url>/2019/12/27/%E5%B7%A5%E5%85%B7/hexo%E4%B9%A6%E5%86%99%E7%AC%AC%E4%B8%80%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>toc生成</title>
      <link href="/2019/12/27/%E6%8E%A2%E7%B4%A2/forsee1/"/>
      <url>/2019/12/27/%E6%8E%A2%E7%B4%A2/forsee1/</url>
      
        <content type="html"><![CDATA[<p>@[toc]</p><h1 id="biaoti"><a href="#biaoti" class="headerlink" title="biaoti"></a>biaoti</h1><p>zhengwen<br>zhengada<br>cjaddad<br>s<br>dsaasfasf<br>adfaf</p><h2 id="cibiaoto"><a href="#cibiaoto" class="headerlink" title="cibiaoto"></a>cibiaoto</h2>]]></content>
      
      
      <categories>
          
          <category> 探索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批判思维</title>
      <link href="/2019/12/27/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%89%B9%E5%88%A4%E6%80%9D%E7%BB%B4/"/>
      <url>/2019/12/27/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%89%B9%E5%88%A4%E6%80%9D%E7%BB%B4/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
